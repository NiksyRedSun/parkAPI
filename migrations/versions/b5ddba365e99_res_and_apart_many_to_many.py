"""res and apart many-to-many

Revision ID: b5ddba365e99
Revises: da99ccb317bd
Create Date: 2024-06-22 19:50:48.681303

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b5ddba365e99'
down_revision = 'da99ccb317bd'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('residence',
    sa.Column('apartment_id', sa.Integer(), nullable=False),
    sa.Column('resident_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['apartment_id'], ['apartments.id'], ),
    sa.ForeignKeyConstraint(['resident_id'], ['residents.id'], ),
    sa.PrimaryKeyConstraint('apartment_id', 'resident_id')
    )
    with op.batch_alter_table('apartments', schema=None) as batch_op:
        batch_op.drop_constraint('apartments_resident_id_num_key', type_='unique')
        batch_op.drop_constraint('apartments_resident_id_fkey', type_='foreignkey')
        batch_op.drop_column('resident_id')
        batch_op.drop_column('num')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('apartments', schema=None) as batch_op:
        batch_op.add_column(sa.Column('num', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('resident_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key('apartments_resident_id_fkey', 'residents', ['resident_id'], ['id'], ondelete='CASCADE')
        batch_op.create_unique_constraint('apartments_resident_id_num_key', ['resident_id', 'num'])

    op.drop_table('residence')
    # ### end Alembic commands ###
